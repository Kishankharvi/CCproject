// import React from "react";
// import Client from "../componets/Client";
// const Editor = () => {
//     const clients=[
//     { socketId: 1, username: "test" },
//     { socketId: 1, username: "test" },
//     { socketId: 1, username: "test" },
//   ];
// //   const [clients, setClients] = useState([]);
// //   useEffect(()=>{
// //     setClients([
// //     { socketId: 1, username: "test" },
// //     { socketId: 1, username: "test" },
// //     { socketId: 1, username: "test" },
// //   ])
// //   },[])
//   return (
//     <div className="min-h-[100vh] bg-primary flex pt-16 justify-center">
//       <div className="w-full max-w-md">
//         <div className="aside text-primary">
//           this is aside
//           <div className="aside-inner">
//             <h1>this is inner</h1>
//             <div className="client-list">
//               {clients.map((client) => {
//                 <Client key={client.socketId} username={client.username} />;
//               })}
//             </div>
//           </div>
//         </div>
//         <div className="editorwrap text-secondary">
//           this is editor 1.06.20 this is jsut a test
//         </div>
//       </div>
//     </div>
//   );
// };

// export default Editor;
import React, { useState } from "react";
import Client from "../componets/Client";

const Editor = () => {
  const [clients] = useState([
    { socketId: 1, username: "Alice" },
    { socketId: 2, username: "Bob" },
    { socketId: 3, username: "Charlie" },
  ]);

  const [isAsideCollapsed, setIsAsideCollapsed] = useState(false);

  const toggleAside = () => {
    setIsAsideCollapsed(!isAsideCollapsed);
  };

  return (
    <div className="min-h-[100vh] bg-primary flex">
      {/* Mobile Header */}
      <div className="fixed top-0 left-0 right-0 z-40 bg-secondary border-b border-primary shadow-themed-sm lg:hidden">
        <div className="flex items-center justify-between p-4">
          <div className="flex items-center space-x-3">
            <button
              onClick={toggleAside}
              className="p-2 text-primary hover:bg-tertiary rounded-lg transition-colors duration-200"
            >
              <i className="fi fi-br-menu-burger text-lg"></i>
            </button>
            <h1 className="text-lg font-semibold text-primary">Code Editor</h1>
          </div>
          <div className="flex items-center space-x-2">
            <div className="flex items-center bg-accent px-3 py-1 rounded-full">
              <div className="w-2 h-2 bg-success rounded-full mr-2"></div>
              <span className="text-xs font-medium text-accent">{clients.length} online</span>
            </div>
          </div>
        </div>
      </div>

      {/* Sidebar/Aside */}
      <div className={`
        fixed lg:relative top-0 left-0 h-full z-30 transition-transform duration-300 ease-in-out
        ${isAsideCollapsed ? '-translate-x-full lg:translate-x-0' : 'translate-x-0'}
        ${isAsideCollapsed ? 'lg:w-16' : 'w-80 lg:w-80'}
        bg-secondary border-r border-primary shadow-themed-lg lg:shadow-none
      `}>
        
        {/* Desktop Header */}
        <div className="hidden lg:flex items-center justify-between p-6 border-b border-primary">
  {/* Left: Logo and Text - Only show when not collapsed */}
  {!isAsideCollapsed && (
    <div className="flex items-center space-x-3">
      <div className="w-10 h-10 bg-brand rounded-lg flex items-center justify-center shadow-themed-sm">
        <i className="fi fi-br-code text-white text-lg"></i>
      </div>
      <div>
        <h1 className="text-lg font-bold text-primary">Code Editor</h1>
        <p className="text-xs text-secondary">Room: ABC123</p>
      </div>
    </div>
  )}

  {/* Right: Toggle Button - Always visible */}
  <button
    onClick={toggleAside}
    className="p-2 text-secondary hover:text-primary hover:bg-tertiary rounded-lg transition-all duration-200 ml-auto"
  >
    <i className={`fi ${isAsideCollapsed ? 'fi-br-angle-right' : 'fi-br-angle-left'} text-sm`}></i>
  </button>
</div>


        {/* Mobile Close Button */}
        <div className="lg:hidden flex items-center justify-between p-4 mt-16 border-b border-primary">
          <h2 className="text-lg font-semibold text-primary">Collaboration</h2>
          <button
            onClick={toggleAside}
            className="p-2 text-secondary hover:text-primary hover:bg-tertiary rounded-lg transition-colors duration-200"
          >
            <i className="fi fi-br-cross text-lg"></i>
          </button>
        </div>

        {/* Sidebar Content */}
        <div className="flex-1 overflow-y-auto">
         !isAsideCollapsed ?
            <div className="p-6 space-y-6">
              {/* Room Info */}
              <div className="bg-tertiary rounded-xl p-4 border border-primary">
                <div className="flex items-center justify-between mb-3">
                  <h3 className="text-sm font-semibold text-primary">Room Info</h3>
                  <button className="p-1 text-secondary hover:text-primary transition-colors duration-200">
                    <i className="fi fi-br-copy text-xs"></i>
                  </button>
                </div>
                <div className="space-y-2">
                  <div className="flex items-center text-xs">
                    <i className="fi fi-br-key text-brand mr-2"></i>
                    <span className="text-secondary">ID: ABC123DEF</span>
                  </div>
                  <div className="flex items-center text-xs">
                    <i className="fi fi-br-clock text-brand mr-2"></i>
                    <span className="text-secondary">Active: 2h 45m</span>
                  </div>
                </div>
              </div>

              {/* Connected Users */}
              <div>
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-sm font-semibold text-primary flex items-center">
                    <i className="fi fi-br-users text-brand mr-2"></i>
                    Connected Users
                  </h3>
                  <span className="bg-brand text-white text-xs px-2 py-1 rounded-full font-medium">
                    {clients.length}
                  </span>
                </div>
                
                <div className="space-y-3">
                  {clients.map((client, index) => (
                    <Client key={client.socketId+index} username={client.username} />
                  ))}
                </div>
              </div>

              {/* Quick Actions */}
              <div>
                <h3 className="text-sm font-semibold text-primary mb-4 flex items-center">
                  <i className="fi fi-br-bolt text-brand mr-2"></i>
                  Quick Actions
                </h3>
                <div className="grid grid-cols-2 gap-3">
                  <button className="bg-tertiary hover:bg-hover border border-primary rounded-lg p-3 text-center transition-all duration-200 hover:shadow-themed-sm">
                    <i className="fi fi-br-download text-brand text-lg mb-2 block"></i>
                    <span className="text-xs text-primary font-medium">Download</span>
                  </button>
                  <button className="bg-tertiary hover:bg-hover border border-primary rounded-lg p-3 text-center transition-all duration-200 hover:shadow-themed-sm">
                    <i className="fi fi-br-share text-brand text-lg mb-2 block"></i>
                    <span className="text-xs text-primary font-medium">Share</span>
                  </button>
                  <button className="bg-tertiary hover:bg-hover border border-primary rounded-lg p-3 text-center transition-all duration-200 hover:shadow-themed-sm">
                    <i className="fi fi-br-settings text-brand text-lg mb-2 block"></i>
                    <span className="text-xs text-primary font-medium">Settings</span>
                  </button>
                  <button className="bg-tertiary hover:bg-hover border border-primary rounded-lg p-3 text-center transition-all duration-200 hover:shadow-themed-sm">
                    <i className="fi fi-br-sign-out-alt text-error text-lg mb-2 block"></i>
                    <span className="text-xs text-error font-medium">Leave</span>
                  </button>
                </div>
              </div>
            </div> : null
        </div>
      </div>


    </div>
  );
};

export default Editor;